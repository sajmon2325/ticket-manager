package com.opensourcedev.ticketmanager.model.items;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.opensourcedev.ticketmanager.model.enums.ItemStatus;
import com.opensourcedev.ticketmanager.model.users.IncidentSolver;
import com.opensourcedev.ticketmanager.model.users.User;
import lombok.*;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.UpdateTimestamp;

import javax.persistence.*;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import java.sql.Timestamp;

@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@MappedSuperclass
public class BaseItem {

    @JsonIgnore
    @Id
    @GeneratedValue(generator="system-uuid")
    @GenericGenerator(name="system-uuid", strategy = "uuid")
    private String id;      // Secret ID generated by DB

    @Enumerated(value = EnumType.STRING)
    @NotNull
    @Column(name = "item_status")
    private ItemStatus itemStatus;

    @CreationTimestamp
    @Column(name = "created_at", updatable = false)
    private Timestamp createdAt;

    @UpdateTimestamp
    @Column(name = "updated_at",updatable = true)
    private Timestamp updatedAt;

    @Column(name = "closed_at", updatable = false)
    private Timestamp closedAt;


    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "incidentSolver_id", referencedColumnName = "id")   // owning side
    private IncidentSolver incidentSolver;


    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "user_id", referencedColumnName = "id")
    private User user;
}
